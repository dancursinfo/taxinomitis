# Defines a 200 megabyte space for the API cache
proxy_cache_path  /var/nginx_api_cache_space levels=1:2 keys_zone=twitter_api_proxy:200m;

# List domains allowed to submit cross-origin domain requests
#  (machinelearningforkids.co.uk subdomains - and local development)
map $http_origin $allow_origin {
    ~^https?://(.*\.)?machinelearningforkids.co.uk(:\d+)?$ $http_origin;
    default 'http://ml-for-kids-local.net:3000';
}


server {
    listen ${PORT};

    # defines the Twitter proxy
    location /twitter/ {

        # List any domains allowed to submit cross-origin domain requests
        add_header 'Access-Control-Allow-Origin' $allow_origin;
        add_header 'Access-Control-Allow-Methods' 'GET';

        access_log off;

        # Use the 200m cache space defined above
        proxy_cache twitter_api_proxy;

        # Cache successful API requests for 15 minutes
        #  as the aim is to avoid sending the same request to Twitter
        #  more than once within a rate-limiting request window
        proxy_cache_valid 200 302 404 15m;

        # Use the cache even after 15 minutes if we get API errors
        proxy_cache_use_stale error updating timeout;

        # Ignore and strip the cache headers set by the Twitter API
        proxy_ignore_headers X-Accel-Expires Expires Cache-Control Set-Cookie;
        proxy_hide_header X-Accel-Expires;
        proxy_hide_header Expires;
        proxy_hide_header Cache-Control;
        proxy_hide_header pragma;
        proxy_hide_header set-cookie;

        # Tells the client to cache this for 15 minutes
        expires 15m;

        # Set the correct host name to connect to the Twitter API.
        proxy_set_header Host api.twitter.com;

        # Get the auth header from manifest.yml
        proxy_set_header Authorization "Bearer ${TWITTER_BEARER_TOKEN}";

        # Location of the Twitter API
        #  (The trailing slash is important for the URL rewriting - don't remove it)
        proxy_pass https://api.twitter.com/;

        # Add a header to the response that tells us if it came from the cache or not
        add_header X-Cache-Status $upstream_cache_status;
    }


    # defines the Wikipedia proxy
    location /wikipedia/ {

        # List any domains allowed to submit cross-origin domain requests
        add_header 'Access-Control-Allow-Origin' $allow_origin;
        add_header 'Access-Control-Allow-Methods' 'GET';

        access_log off;

        # Set the correct host name to connect to the Wikipedia API.
        proxy_set_header Host en.wikipedia.org;

        # Location of the Wikipedia API
        #  (The trailing slash is important for the URL rewriting - don't remove it)
        proxy_pass https://en.wikipedia.org/;
    }
}
